{"ast":null,"code":"var _jsxFileName = \"/Users/fernandodemaio/Documents/GitHub/toReactChallenge2/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ToDoList } from './components/ToDoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [listaToDo, setListaToDo] = useState([{\n    id: uuidv4(),\n    task: \"tarea de prueba\",\n    status: false\n  }]);\n  const toDoTaskRef = useRef();\n\n  const toggleToDo = id => {\n    const newToDos = [...listaToDo];\n    const toDo = newToDos.find(toDo => toDo.id === id);\n    toDo.status = !toDo.status;\n    setListaToDo(newToDos);\n  };\n\n  const handleToDoAdd = () => {\n    const task = toDoTaskRef.current.value;\n\n    if (task === '') {\n      return;\n    } else {\n      setListaToDo(prevToDo => {\n        return [...prevToDo, {\n          id: uuidv4(),\n          task,\n          status: false\n        }];\n      });\n      toDoTaskRef.current.value = null;\n    }\n  };\n\n  const handleClearDone = () => {\n    const newListaToDo = listaToDo.filter(todo => !todo.status).length;\n    setListaToDo(newListaToDo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoList, {\n      listaToDo: listaToDo,\n      toggleToDo: toggleToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: toDoTaskRef,\n      type: \"text\",\n      placeholder: \"nueva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToDoAdd,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearDone,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tareas restantes: \", listaToDo.filter(todo => !todo.status).length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"EANCxQHy406M8MFavEKeVRQfg1U=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fernandodemaio/Documents/GitHub/toReactChallenge2/src/App.jsx"],"names":["React","Fragment","useState","useRef","v4","uuidv4","ToDoList","App","listaToDo","setListaToDo","id","task","status","toDoTaskRef","toggleToDo","newToDos","toDo","find","handleToDoAdd","current","value","prevToDo","handleClearDone","newListaToDo","filter","todo","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,EAAE,EAACL,MAAM,EAAV;AAAcM,IAAAA,IAAI,EAAC,iBAAnB;AAAsCC,IAAAA,MAAM,EAAE;AAA9C,GAAD,CAAD,CAA1C;AAEA,QAAMC,WAAW,GAAGV,MAAM,EAA1B;;AAEA,QAAMW,UAAU,GAAIJ,EAAD,IAAQ;AACzB,UAAMK,QAAQ,GAAG,CAAC,GAAGP,SAAJ,CAAjB;AACA,UAAMQ,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAeD,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAUA,EAAlC,CAAb;AACAM,IAAAA,IAAI,CAACJ,MAAL,GAAc,CAACI,IAAI,CAACJ,MAApB;AAEAH,IAAAA,YAAY,CAACM,QAAD,CAAZ;AACD,GAND;;AAQA,QAAMG,aAAa,GAAG,MAAM;AAC1B,UAAMP,IAAI,GAAGE,WAAW,CAACM,OAAZ,CAAoBC,KAAjC;;AACA,QAAGT,IAAI,KAAI,EAAX,EAAc;AACZ;AACD,KAFD,MAGI;AACFF,MAAAA,YAAY,CAAEY,QAAD,IAAa;AACxB,eAAO,CAAC,GAAGA,QAAJ,EAAc;AAACX,UAAAA,EAAE,EAACL,MAAM,EAAV;AAAcM,UAAAA,IAAd;AAAoBC,UAAAA,MAAM,EAAC;AAA3B,SAAd,CAAP;AAED,OAHW,CAAZ;AAIAC,MAAAA,WAAW,CAACM,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;AACF,GAZD;;AAcA,QAAME,eAAe,GAAG,MAAM;AAC5B,UAAMC,YAAY,GAAGf,SAAS,CAACgB,MAAV,CAAkBC,IAAD,IAAS,CAACA,IAAI,CAACb,MAAhC,EAAwCc,MAA7D;AACAjB,IAAAA,YAAY,CAACc,YAAD,CAAZ;AACD,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEf,SAArB;AAAgC,MAAA,UAAU,EAAEM;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAED,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAQ,MAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAA,uCAAwBd,SAAS,CAACgB,MAAV,CAAkBC,IAAD,IAAS,CAACA,IAAI,CAACb,MAAhC,EAAwCc,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcD;;GA/CenB,G;;KAAAA,G","sourcesContent":["import React, { Fragment, useState, useRef} from 'react';\nimport {v4 as uuidv4} from \"uuid\";\nimport { ToDoList } from './components/ToDoList';\n\nexport function App() {\n  \n  const [listaToDo, setListaToDo] = useState([{id:uuidv4(), task:\"tarea de prueba\", status: false}]);\n  \n  const toDoTaskRef = useRef();\n  \n  const toggleToDo = (id) => {\n    const newToDos = [...listaToDo];\n    const toDo = newToDos.find((toDo) => toDo.id===id);\n    toDo.status = !toDo.status;\n\n    setListaToDo(newToDos);\n  }\n\n  const handleToDoAdd = () => {\n    const task = toDoTaskRef.current.value;\n    if(task ===''){ \n      return;\n    }\n    else{    \n      setListaToDo((prevToDo) =>{ \n        return [...prevToDo, {id:uuidv4(), task, status:false}];\n        \n      });\n      toDoTaskRef.current.value = null;\n    }\n  }\n\n  const handleClearDone = () => {\n    const newListaToDo = listaToDo.filter((todo) =>!todo.status).length;\n    setListaToDo(newListaToDo); \n  }\n\n  return (\n      <Fragment>\n        <ToDoList listaToDo={listaToDo} toggleToDo={toggleToDo}/>\n        <input ref={toDoTaskRef} type=\"text\" placeholder=\"nueva\" />\n        <button onClick={handleToDoAdd}>\n          +\n        </button>\n        <button onClick={handleClearDone} >\n          -\n        </button>\n\n        <div>Tareas restantes: {listaToDo.filter((todo) =>!todo.status).length } </div>\n      </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}