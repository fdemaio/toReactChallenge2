{"ast":null,"code":"var _jsxFileName = \"/Users/fernandodemaio/Documents/GitHub/toReactChallenge2/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TodoList } from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [listaToDo, setListaToDo] = useState([{\n    id: 1,\n    task: \"tarea de prueba\",\n    status: false\n  }]);\n  const toDoTaskRef = useRef();\n\n  const handleToDoAdd = () => {\n    const task = toDoTaskRef.current.value;\n    if (task === '') return;\n    setListaToDo(prevToDo => {\n      return [...prevToDo, {\n        id: uuidv4(),\n        task,\n        status: false\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      listaToDo: [listaToDo]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: toDoTaskRef,\n      type: \"text\",\n      placeholder: \"nueva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToDoAdd,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Quitar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"dCecS/K87cEsr4tBO5xv7Dkv7Ck=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fernandodemaio/Documents/GitHub/toReactChallenge2/src/App.jsx"],"names":["React","Fragment","useState","useRef","v4","uuidv4","TodoList","App","listaToDo","setListaToDo","id","task","status","toDoTaskRef","handleToDoAdd","current","value","prevToDo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CACzC;AAACQ,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAC,iBAAZ;AAA+BC,IAAAA,MAAM,EAAE;AAAvC,GADyC,CAAD,CAA1C;AAIE,QAAMC,WAAW,GAAGV,MAAM,EAA1B;;AAEA,QAAMW,aAAa,GAAG,MAAM;AAC1B,UAAMH,IAAI,GAAGE,WAAW,CAACE,OAAZ,CAAoBC,KAAjC;AACA,QAAGL,IAAI,KAAI,EAAX,EAAe;AAEfF,IAAAA,YAAY,CAAEQ,QAAD,IAAa;AACvB,aAAO,CAAC,GAAGA,QAAJ,EAAc;AAACP,QAAAA,EAAE,EAACL,MAAM,EAAV;AAAcM,QAAAA,IAAd;AAAoBC,QAAAA,MAAM,EAAC;AAA3B,OAAd,CAAP;AACF,KAFW,CAAZ;AAGD,GAPD;;AASF,sBACI,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAE,CAACJ,SAAD;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEK,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD;;GA7BeP,G;;KAAAA,G","sourcesContent":["import React, { Fragment, useState, useRef} from 'react';\nimport {v4 as uuidv4} from \"uuid\";\nimport { TodoList } from './components/TodoList';\n\nexport function App() {\n  \n  const [listaToDo, setListaToDo] = useState([\n    {id:1, task:\"tarea de prueba\", status: false},\n  ]);\n  \n    const toDoTaskRef = useRef();\n\n    const handleToDoAdd = () => {\n      const task = toDoTaskRef.current.value;\n      if(task ==='') return;\n      \n      setListaToDo((prevToDo) =>{ \n         return [...prevToDo, {id:uuidv4(), task, status:false}];\n      });\n    }\n\n  return (\n      <Fragment>\n        <TodoList listaToDo={[listaToDo]} />\n        <input ref={toDoTaskRef} type=\"text\" placeholder=\"nueva\" />\n        <button onClick={handleToDoAdd}>\n          +\n        </button>\n        <button>\n          Quitar\n        </button>\n      </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}